# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# README documentation generated automatically from this file via https://github.com/norwoodj/helm-docs

# global -- for common values see https://github.com/Activiti/activiti-cloud-common-chart/blob/master/charts/common/README.md
global:
  # global.registryPullSecrets -- Configure pull secrets for all deployments
  registryPullSecrets:
    - "quay-registry-secret"

  keycloak:
    # global.keycloak.host -- Configure Keycloak host template, i.e. "{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: '{{ template "common.gateway-domain" . }}'

    # global.keycloak.url -- Set full url to configure external Keycloak, https://keycloak.mydomain.com/auth
    url: ""

    # global.keycloak.realm -- Configure Keycloak realm
    realm: "alfresco"

    # global.keycloak.resource -- Configure Keycloak resource
    resource: "activiti"

  gateway:
    # global.gateway.host -- Set to configure single host domain name for all services, i.e. "{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}"
    host: '{{ template "common.gateway-domain" . }}'

    # global.gateway.http -- Set to false enables HTTPS configuration on all urls
    http: "false"

    # global.gateway.tlsacme -- Set to enable automatic TLS for ingress if https is enabled
    tlsacme: "false"

    # global.gateway.domain -- Set to configure gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    #  helm upgrade activiti . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: "REPLACEME"

    # global.gateway.annotations -- Configure global annotations for all service ingresses
    annotations: {}

  acs:
    # global.acs.host -- host for content services
    host: '{{ template "common.gateway-host" . }}'

    # global.acs.url -- set full url to configure external ACS, https://acs.mydomain.com without /alfresco
    url: ""
    # global.acs.admin -- admin credentials to setup required users/groups/acl on ACS
    admin:
      username: ""
      password: ""

alfresco-infrastructure:
  nginx-ingress:
    enabled: false

# set to false to disable custom alfresco-identity-service ingress with hostname support
alfresco-identity-service:
  enabled: true
  ingress:
    enabled: false
    common:
      enabled: true
    annotations:
      # Disable Nginx CORS for Identity Service
      nginx.ingress.kubernetes.io/enable-cors: "false"
  keycloak:
    ingress:
      enabled: false
    postgresql:
      imageTag: "11.3"
      persistence:
        existingClaim: null # use default postgresql PVC
    keycloak:
      service:
        port: 80
      extraArgs: "-Dkeycloak.import=/realm/alfresco-aps-realm.json"
      # Add explicit support for HTTPS proxy address forwarding
      extraEnv: |
        - name: PROXY_ADDRESS_FORWARDING
          value: "true"
  realm:
    alfresco:
      client:
        redirectUris:
          - "*"
        webOrigins:
          - "*"

persistence:
  enabled: false
  accessModes:
    - ReadWriteOnce
  baseSize: 100Gi

postgresql-ams:
  image:
    repository: postgres
    tag: 11.4
  postgresqlUsername: alfresco
  postgresqlPassword: alfresco
  postgresqlDatabase: postgres
  postgresqlDataDir: /var/lib/postgresql/data/pgdata
  postgresqlConfiguration:
    max_connections: 300
    log_min_messages: LOG
  resources:
    requests:
      memory: 1500Mi
    limits:
      memory: 1500Mi

alfresco-modeling-service:
  nameOverride: alfresco-modeling-service
  rbac:
    create: false
  serviceAccount:
    create: false
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    enabled: true
    path: ""
    subPaths:
      - /modeling-service/?(.*)
      - /dmn-service/?(.*)
      - /script-service/?(.*)
  extraVolumes: |
    - name: license
      secret:
        secretName: licenseaps
  extraVolumeMounts: |
    - name: license
      mountPath: "/root/.activiti/enterprise-license/"
      readOnly: true
  image:
    repository: quay.io/alfresco/alfresco-modeling-service
    tag: develop
    pullPolicy: Always
  postgres:
    enabled: true
    name: postgresql-ams
    username: alfresco
    password: alfresco
  probePath: /actuator/health
  content:
    service:
      path: alfresco
    client:
      id: ""
      secret: ""
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
      value: "*"
    - name: ACT_KEYCLOAK_URL
      value: '{{ include "common.keycloak-url" . }}'
    - name: CONTENT_CLIENT_ID
      value: "{{ .Values.content.client.id }}"
    - name: CONTENT_CLIENT_SECRET
      value: "{{ .Values.content.client.secret }}"
    - name: CONTENT_SERVICE_URL
      value: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    - name: CONTENT_SERVICE_PATH
      value: "{{ .Values.content.service.path }}"

alfresco-modeling-app:
  nameOverride: "alfresco-modeling-app"
  ingress:
    path: /modeling
  image:
    repository: quay.io/alfresco/alfresco-modeling-app
    tag: develop
    pullPolicy: IfNotPresent
  env:
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_OAUTH2_SILENT_LOGIN: "true"
    APP_CONFIG_ECM_HOST: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'

postgresql-ads:
  image:
    repository: postgres
    tag: 11.4
  postgresqlUsername: alfresco
  postgresqlPassword: alfresco
  postgresqlDatabase: postgres
  postgresqlDataDir: /var/lib/postgresql/data/pgdata
  postgresqlConfiguration:
    max_connections: 300
    log_min_messages: LOG
  resources:
    requests:
      memory: 1500Mi
    limits:
      memory: 1500Mi

alfresco-deployment-service:
  alfresco-content-services:
    enabled: true
    activemq:
      # alfresco-deployment-service.alfresco-content-services.activemq.url -- ACS ActiveMQ URL for events
      url: ""
      # alfresco-deployment-service.alfresco-content-services.activemq.username -- ACS ActiveMQ username
      username: ""
      # alfresco-deployment-service.alfresco-content-services.activemq.username -- ACS ActiveMQ password
      password: ""
  enabled: true
  rbac:
    create: false
  serviceAccount:
    create: false
  rabbitmq:
    enabled: false
  image:
    repository: quay.io/alfresco/alfresco-deployment-service
    tag: develop
    pullPolicy: Always
  postgres:
    enabled: true
    name: postgresql-ads
    username: alfresco
    password: alfresco
  applications:
    image:
      # alfresco-deployment-service.applications.image.tag -- default tag for all images used in application
      tag: develop
    max_number: 20
      # alfresco-deployment-service.applications.max_number -- maximum number of application can be deployed
      # @default -- 20 applications can be deployed by default
    database:
      external: false
    connectors:
      # alfresco-deployment-service.applications.connectors.emailConnector -- In order to apply default account configuration to the email connector, all the variables need to be set. All email connectors in every application in the cluster will share the same account.
      emailConnector:
        # alfresco-deployment-service.applications.connectors.emailConnector.username -- email username
        username: ""
        # alfresco-deployment-service.applications.connectors.emailConnector.password -- email password
        password: ""
        # alfresco-deployment-service.applications.connectors.emailConnector.host -- email host
        host: ""
        # alfresco-deployment-service.applications.connectors.emailConnector.port -- email port
        port: ""
    process_storage_service:
      # alfresco-deployment-service.applications.process_storage_service.clientSecret --  pass secret for process storage service
      clientSecret: ""
  ingress:
    path: /deployment-service
    enabled: true
  probePath: "{{ .Values.ingress.path }}/actuator/health"
  environment:
    apiUrl: ""
    apiToken: ""
    # alfresco-deployment-service.environment.namespace -- namespace to copy secrets from to application namespaces
    # @default -- installation namespace
    namespace: "{{ .Release.Namespace }}"
  connectorVolume:
    storageClass: "default-sc"
    permission: "ReadWriteMany"
  extraVolumes: |
    - name: config
      configMap:
        name: {{ .Release.Name }}-deployment-config
        defaultMode: 0744
    - name: license
      secret:
        secretName: licenseaps
  extraVolumeMounts: |
    - name: license
      mountPath: "/root/.activiti/enterprise-license/"
      readOnly: true
  extraEnv: |
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_SERVLET_CONTEXTPATH
      value: "{{ .Values.ingress.path }}"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
      value: "*"
    - name: KEYCLOAK_AUTH_SERVER_URL
      value: '{{ include "common.keycloak-url" . }}'
    - name: DOCKER_REGISTRY_IMAGE_TAG
      value: "{{ .Values.applications.image.tag }}"
    - name: CONTENT_SERVICE_BASE_URL
      value: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    - name: CONTENT_SERVICE_ENABLED
      value: '{{ index .Values "alfresco-content-services" "enabled" }}'
    {{- with index .Values "alfresco-content-services" "activemq" "url" }}
    - name: CONTENT_SERVICE_ACTIVEMQ_URL
      value: "{{ . }}"
    {{- end }}
    {{- with index .Values "alfresco-content-services" "activemq" "username" }}
    - name: CONTENT_SERVICE_ACTIVEMQ_USERNAME
      value: "{{ . }}"
    {{- end }}
    {{- with index .Values "alfresco-content-services" "activemq" "password" }}
    - name: CONTENT_SERVICE_ACTIVEMQ_PASSWORD
      value: "{{ . }}"
    {{- end }}
    - name: MODELING_URL
      value: '{{ include "common.gateway-url" . }}/modeling-service'
    - name: ENVIRONMENT_HOST_URL
      value: '{{ include "common.gateway-url" . }}'
    - name: ENVIRONMENT_API_URL
      value: "{{ .Values.environment.apiUrl }}"
    - name: ENVIRONMENT_API_TOKEN
      value: "{{ .Values.environment.apiToken }}"
    - name: ENVIRONMENT_NAMESPACE
      value: "{{ tpl .Values.environment.namespace . }}"
    - name: PROJECT_RELEASE_VOLUME_STORAGE_CLASS
      value: "{{ .Values.connectorVolume.storageClass }}"
    - name: PROJECT_RELEASE_VOLUME_PERMISSION
      value: "{{ .Values.connectorVolume.permission }}"
    - name: APPLICATIONS_DATABASE_EXTERNAL
      value: "{{ .Values.applications.database.external }}"
    {{- with .Values.applications.connectors.emailConnector.username }}
    - name: CONNECTOR_EMAILCONNECTOR_USERNAME
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.connectors.emailConnector.password }}
    - name: CONNECTOR_EMAILCONNECTOR_PASSWORD
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.connectors.emailConnector.host }}
    - name: CONNECTOR_EMAILCONNECTOR_HOST
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.connectors.emailConnector.port }}
    - name: CONNECTOR_EMAILCONNECTOR_PORT
      value: "{{ . }}"
    {{- end }}
    - name: APPLICATIONS_MAXNUMBER
      value: "{{ .Values.applications.max_number }}"
    {{- with .Values.applications.process_storage_service.clientSecret }}
    - name: PROCESS_STORAGE_SERVICE_CLIENTSECRET
      value: "{{ . }}"
    {{- end }}


alfresco-admin-app:
  nameOverride: "alfresco-admin-app"
  ingress:
    hostName:
    path: /admin
  image:
    repository: quay.io/alfresco/alfresco-admin-app
    tag: develop
    pullPolicy: IfNotPresent
  applications:
    allow_custom_resources: true
  alfresco_content_services:
    enabled: false
  env:
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
  extraEnv: |
    - name: APP_ALLOW_CUSTOM_RESOURCES
      value: "{{ .Values.applications.allow_custom_resources }}"
    {{- if  .Values.alfresco_content_services.enabled }}
    - name: APP_CONFIG_ECM_HOST
      value: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    {{- end }}

setup-acs-script-job:
  enabled: true
  image:
    repository: bitnami/minideb-extras
    tag: stretch
