# Default values for chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
# README documentation generated automatically from this file via https://github.com/norwoodj/helm-docs

# global -- for common values see https://github.com/Activiti/activiti-cloud-common-chart/blob/master/charts/common/README.md
global:
  # global.registryPullSecrets -- Configure pull secrets for all deployments
  registryPullSecrets:
    - quay-registry-secret
  gateway:
    # global.gateway.domain -- Set to configure gateway domain template, i.e. {{ .Release.Namespace }}.1.3.4.5.nip.io
    # $ helm upgrade aae . --install --set global.gateway.domain=1.2.3.4.nip.io
    domain: ""
    # global.gateway.host -- Set to configure single host domain name for all services, i.e. "{{ .Release.Namespace }}.{{ template "common.gateway-domain" . }}"
    host: '{{ template "common.gateway-domain" . }}'
    # global.gateway.http -- Set to false enables HTTPS configuration on all urls
    http: "false"
    # global.gateway.tlsacme -- Set to enable automatic TLS for ingress if https is enabled
    tlsacme: "false"
    # global.gateway.annotations -- Configure global annotations for all service ingresses
    annotations: {}
  keycloak:
    # global.keycloak.host -- Configure Keycloak host template, i.e. "{{ .Release.Namespace }}.{{ .Values.global.gateway.domain }}"
    host: '{{ template "common.gateway-host" . }}'
    # global.keycloak.url -- Set full url to configure external Keycloak, https://keycloak.mydomain.com/auth
    url: ""
    # global.keycloak.realm -- Configure Keycloak realm
    realm: alfresco
    # global.keycloak.resource -- Configure Keycloak resource
    resource: alfresco
    # global.keycloak.clientId -- Configure Activiti Keycloak Client Id
    clientId: activiti-keycloak
    # global.keycloak.clientSecret -- Configure Activiti Keycloak Client Secret.
    clientSecret: d2b835b5-efdf-4448-8d55-89eaaca9fc96
  acs:
    # global.acs.enabled -- enable support for ACS
    enabled: false
    # global.acs.host -- host for content services
    host: '{{ template "common.gateway-host" . }}'
    # global.acs.url -- set full url to configure external ACS, https://acs.mydomain.com without /alfresco
    url: ""
    # global.acs.admin -- admin credentials to setup required users/groups/acl on ACS
    admin:
      # global.acs.admin.username -- ACS admin username
      username: ""
      # global.acs.admin.password -- ACS admin password
      password: ""
    activemq:
      # global.acs.activemq.url -- ACS ActiveMQ URL for events
      url: ""
      # global.acs.activemq.username -- ACS ActiveMQ username
      username: ""
      # global.acs.activemq.username -- ACS ActiveMQ password
      password: ""
  hxpr:
    # global.hxpr.enabled -- enable support for HxP Repository
    enabled: false
    # global.hxpr.admin -- admin credentials to manage HxP Repository models
    admin:
      # global.hxpr.admin.clientId -- HxP Repository admin client id
      clientId: ""
      # global.hxpr.admin.clientId -- HxP Repository admin client secret
      clientSecret: ""
  hxp:
    # global.hxp.accountId -- the HxP IAM account id which the HxP Repository belongs to
    accountId: ""
  datadog:
    # global.datadog.enabled -- enables Datadog observability for AAE infrastructure and runtime application services
    enabled: false
    # global.datadog.env -- configures Datadog environment tag. Required if agent or metrics enabled is true.
    env: null
    agent:
      # global.datadog.agent.admission -- enables application Datadog trace agent admission webhook instrumentation for AAE infrastructure services
      admission: true
      # global.datadog.agent.javaLibVersion -- configures Datadog Java trace agent version. Required if admission is enabled
      javaLibVersion: null
      # global.datadog.agent.traceAgentUrl -- configured default Datadog trace agent url, if needed, i.e. unix:///var/run/datadog/apm.socket
      traceAgentUrl: null
      # global.datadog.agent.logsInjection -- configures Datadog trace agent logs injection support for AAE services.
      logsInjection: true
      # global.datadog.agent.profiling -- configures Datadog trace agent profiling support for AAE services.
      profiling: false
    metrics:
      # global.datadog.metrics.enabled -- enables application Datadog metrics registry export for AAE infrastructure services.
      enabled: false
      # global.datadog.metrics.apiKey -- configures application Datadog metrics export api key. Required if metrics.enabled is true
      apiKey: null
      # global.datadog.metrics.applicationKey -- configures application Datadog metrics export application key if needed.
      applicationKey: null
      # global.datadog.metrics.uri -- configures application Datadog metrics export uri if needed, i.e. https://api.datadoghq.com
      uri: null
      # global.datadog.metrics.hostTag -- configures application Datadog metrics export host tag property if needed, i.e. instance
      hostTag: null
      # global.datadog.metrics.descriptions -- enables application Datadog metrics export details.
      descriptions: true
      # global.datadog.metrics.step -- configures application Datadog metrics registry step interval if needed, i.e. PT1M
      step: null
      # global.datadog.metrics.connectTimeout -- configures application Datadog metrics export connect timeout if needed, i.e. PT1S.
      connectTimeout: null
      # global.datadog.metrics.readTimeout -- configures application Datadog metrics export read timeout if needed, i.e. PT10S.
      readTimeout: null
      # global.datadog.metrics.batchSize -- configures application Datadog metrics export batch size if needed, i.e. 10000.
      batchSize: null
alfresco-identity-service:
  enabled: true
  ingress:
    enabled: true
    rules:
      - host: '{{ include "common.keycloak-host" . }}'
        paths:
          - path: /auth
            pathType: Prefix
    tls: []
    ingressClassName: nginx
    annotations:
      nginx.ingress.kubernetes.io/proxy-buffer-size: 16k
  command:
    - "/opt/keycloak/bin/kc.sh"
    - "start"
    - "--http-enabled=true"
    - "--http-port=8080"
    - "--hostname-strict=false"
    - "--hostname-strict-https=false"
    - "--import-realm"
  extraEnv: |
    - name: KEYCLOAK_ADMIN
      value: admin
    - name: KEYCLOAK_ADMIN_PASSWORD
      value: admin
    - name: JAVA_OPTS_APPEND
      value: '-Djgroups.dns.query={{ include "keycloak.fullname" . }}-headless'
    - name: KC_HOSTNAME
      value: '{{ include "common.keycloak-host" . }}'
  extraVolumes: |
    - name: realm-secret
      secret:
        secretName: realm-secret
    - name: theme
      emptyDir: {}
    - name: h2-database
      persistentVolumeClaim:
        claimName: keycloak-pvc
  extraVolumeMounts: |
    - name: realm-secret
      mountPath: /opt/keycloak/data/import
      readOnly: true
    - name: theme
      mountPath: /opt/keycloak/themes/alfresco
      readOnly: true
    - name: h2-database
      mountPath: /opt/keycloak/data/h2
  extraInitContainers: |
    - name: theme-download
      args:
        - "-c"
        - |
          wget https://github.com/Alfresco/alfresco-keycloak-theme/releases/download/0.3.5/alfresco-keycloak-theme-0.3.5.zip -O alfresco.zip
          unzip alfresco.zip
          mv alfresco/* /theme/
      command:
        - "sh"
      image: "busybox:1.36"
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - name: theme
          mountPath: /theme
  postgresql:
    enabled: false
  realm:
    alfresco:
      adminPassword: admin
      client:
        redirectUris:
          - "*"
        webOrigins:
          - "*"
      extraClients:
        - clientId: activiti
          enabled: true
          redirectUris:
            - "*"
          webOrigins:
            - "*"
          directAccessGrantsEnabled: true
          implicitFlowEnabled: true
          clientRoles: []
        - clientId: storage-service
          enabled: true
          authorizationServicesEnabled: true
          directAccessGrantsEnabled: true
          secret: 08102f0f-025c-4226-8a3e-674343bff231
        - clientId: activiti-keycloak
          enabled: true
          clientAuthenticatorType: client-secret
          secret: d2b835b5-efdf-4448-8d55-89eaaca9fc96
          bearerOnly: false
          standardFlowEnabled: false
          implicitFlowEnabled: false
          directAccessGrantsEnabled: true
          serviceAccountsEnabled: true
          publicClient: false
          protocol: openid-connect
          fullScopeAllowed: true
        - clientId: analytics-playground
          enabled: true
          clientAuthenticatorType: client-secret
          secret: 2181210d-ec04-4bcf-8649-8a5dcb1c6342
          redirectUris:
            - "*"
          webOrigins:
            - "*"
          standardFlowEnabled: true
          implicitFlowEnabled: false
          directAccessGrantsEnabled: false
          serviceAccountsEnabled: false
          publicClient: false
          protocol: openid-connect
          protocolMappers:
            - name: realm roles
              protocol: openid-connect
              protocolMapper: oidc-usermodel-realm-role-mapper
              consentRequired: false
              config:
                access.token.claim: 'true'
                claim.name: role
                jsonType.label: String
                multivalued: 'true'
      extraRealmRoles:
        - name: ACTIVITI_ADMIN
          composites:
            client:
              realm-management:
                - view-users
                - view-clients
        - name: ACTIVITI_DEVOPS
          composites:
            client:
              realm-management:
                - view-users
                - view-clients
        - name: ACTIVITI_USER
          composites:
            client:
              realm-management:
                - view-users
                - view-clients
        - name: ACTIVITI_MODELER
          composites:
            client:
              realm-management:
                - view-users
                - view-clients
        - name: ACTIVITI_IDENTITY
          description: "user is able to see the identity section"
          composites:
            client:
              realm-management:
                - view-users
                - view-clients
                - query-realms
                - query-clients
                - manage-users
                - manage-authorization
                - manage-realm
                - manage-clients
        - name: ACTIVITI_ANALYTICS
          description: "user is able to use analytics graphql api"
          composites:
            client:
              realm-management:
                - view-users
                - view-clients
      extraGroups:
        - name: hr
          realmRoles:
            - ACTIVITI_USER
        - name: sales
          realmRoles:
            - ACTIVITI_USER
        - name: testgroup
        - name: processadmin
          realmRoles:
            - ACTIVITI_ADMIN
        - name: processanalytics
          realmRoles:
            - ACTIVITI_ANALYTICS
      extraUsers:
        - username: superadminuser
          enabled: true
          firstName: "Super Admin"
          lastName: "User"
          email: superadminuser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - ACTIVITI_USER
            - ACTIVITI_IDENTITY
            - ACTIVITI_DEVOPS
            - ACTIVITI_ADMIN
            - ACTIVITI_MODELER
            - ACTIVITI_ANALYTICS
            - offline_access
            - uma_authorization
          clientRoles:
            realm-management:
              - manage-users
              - manage-clients
              - manage-authorization
              - manage-events
              - manage-realm
              - create-client
              - impersonation
              - realm-admin
            broker:
              - read-token
            account:
              - manage-account
              - view-profile
        - username: devopsuser
          enabled: true
          firstName: DevOps
          lastName: User
          email: devopsuser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_DEVOPS
          clientRoles:
            account:
              - manage-account
              - view-profile
        - username: hruser
          enabled: true
          firstName: HR
          lastName: User
          email: hruser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_USER
          clientRoles:
            account:
              - manage-account
              - view-profile
          groups:
            - /hr
        - username: processadminuser
          enabled: true
          firstName: "Process Admin"
          lastName: User
          email: processadminuser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_ADMIN
          clientRoles:
            account:
              - manage-account
              - view-profile
          groups:
            - /processadmin
        - username: processanalyticsuser
          enabled: true
          firstName: Process Analytics
          lastName: User
          email: processanalyticsuser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_ANALYTICS
          clientRoles:
            account:
              - manage-account
              - view-profile
          groups:
            - /processanalytics
        - username: salesuser
          enabled: true
          firstName: Sales
          lastName: User
          email: salesuser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_USER
          clientRoles:
            account:
              - manage-account
              - view-profile
          groups:
            - /sales
        - username: testuser
          enabled: true
          firstName: Test
          lastName: User
          email: testuser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_USER
          clientRoles:
            account:
              - manage-account
              - view-profile
          groups:
            - /testgroup
        - username: testadmin
          enabled: true
          firstName: Test
          lastName: Admin
          email: testadmin@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_USER
            - ACTIVITI_ADMIN
          clientRoles:
            account:
              - manage-account
              - view-profile
          groups:
            - /testgroup
        - username: identityuser
          enabled: true
          firstName: Identity
          lastName: Admin
          email: identityuser@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_IDENTITY
          clientRoles:
            account:
              - manage-account
              - view-profile
        - username: modeler
          enabled: true
          firstName: Modeler
          lastName: User
          email: modeler@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_MODELER
          clientRoles:
            account:
              - manage-account
              - view-profile
        - username: modeler-qa
          enabled: true
          firstName: Modeler
          lastName: User
          email: modeler-qa@example.com
          credentials:
            - type: password
              value: password
          realmRoles:
            - offline_access
            - uma_authorization
            - ACTIVITI_MODELER
          clientRoles:
            account:
              - manage-account
              - view-profile
        - username: service-account-activiti-keycloak
          enabled: true
          serviceAccountClientId: activiti-keycloak
          clientRoles:
            realm-management:
              - query-realms
              - view-users
postgresql:
  enabled: true
  image:
    tag: 11.22.0
  auth:
    username: alfresco
    password: alfresco
  database: postgres
  postgresqlDataDir: /bitnami/postgresql/data
  persistence:
    mountPath: /bitnami/postgresql
  primary:
    extendedConfiguration: |
      max_connections = 300
      log_min_messages = LOG
  resources:
    requests:
      memory: 1500Mi
    limits:
      memory: 1500Mi
alfresco-modeling-service:
  enabled: true
  nameOverride: alfresco-modeling-service
  podAnnotations:
    admission.datadoghq.com/java-lib.version: '{{ include "alfresco-process-infrastructure.datadog.agent.javaLibVersion" . }}'
  podLabels:
    admission.datadoghq.com/enabled: '{{ include "alfresco-process-infrastructure.datadog.agent.admission" . }}'
    tags.datadoghq.com/service: "{{ .Chart.Name }}"
    tags.datadoghq.com/env: '{{ include "alfresco-process-infrastructure.datadog.env" . }}'
    tags.datadoghq.com/version: "{{ .Values.image.tag }}"
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    path: ""
    subPaths:
      - /modeling-service/?(.*)
      - /dmn-service/?(.*)
      - /script-service/?(.*)
    pathType: ImplementationSpecific
  image:
    repository: quay.io/alfresco/alfresco-modeling-service
    tag: 7.19.0-alpha.103
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  liquibase:
    enabled: true
  postgresql:
    enabled: true
  db:
    uri: "jdbc:postgresql://{{ .Release.Name }}-{{ .Values.postgresql.name }}:{{ .Values.postgresql.port }}/postgres"
    username: alfresco
    password: alfresco
  probePath: /actuator/health
  rabbitmq:
    enabled: false
  content:
    service:
      path: alfresco
    client:
      id: ""
      secret: ""
  activiti:
    keycloak:
      # alfresco-modeling-service.applications.activiti.keycloak.clientId -- activiti keycloak client id
      clientId: "{{ .Values.global.keycloak.clientId }}"
      # alfresco-modeling-service.applications.activiti.keycloak.clientSecret -- activiti keycloak client secret
      clientSecret: "{{ .Values.global.keycloak.clientSecret }}"
  exampleProjects:
    endpoint: http://static-resources/example-projects
    resource: index_7.4.0.json
  extraEnv: |-
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
      value: "*"
    - name: CONTENT_CLIENT_ID
      value: "{{ .Values.content.client.id }}"
    - name: CONTENT_CLIENT_SECRET
      value: "{{ .Values.content.client.secret }}"
    - name: CONTENT_SERVICE_URL
    {{- if .Values.global.hxpr.enabled}}
      value: "{{ .Values.global.hxpr.url }}"
    {{- else }}
      value: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    {{- end }}
    - name: CONTENT_SERVICE_PATH
      value: "{{ .Values.content.service.path }}"
    - name: CONTENT_SERVICE_ENABLED
      value: "{{ or .Values.global.acs.enabled .Values.global.hxpr.enabled }}"
    {{- if .Values.global.hxpr.enabled}}
    - name: CONTENT_REPOSITORY_TYPE
      value: "hxp"
    - name: HXPIDP_ACCOUNTID
      value: "{{ .Values.global.hxp.accountId }}"
    {{- end }}
    {{- with .Values.activiti.keycloak.clientId }}
    - name: ACTIVITI_KEYCLOAK_CLIENT_ID
      value: "{{ tpl . $ }}"
    {{- end }}
    {{- with .Values.activiti.keycloak.clientSecret }}
    - name: ACTIVITI_KEYCLOAK_CLIENT_SECRET
      value: "{{ tpl . $ }}"
    {{- end }}
    - name: ACT_ALFRESCO_MODELING_TEMPLATES_ENDPOINT
      value: "{{ .Values.exampleProjects.endpoint }}"
    - name: ACT_ALFRESCO_MODELING_TEMPLATES_RESOURCE
      value: "{{ .Values.exampleProjects.resource }}"
    {{- if .Values.global.datadog.enabled }}
    {{- with .Values.global.datadog.agent.traceAgentUrl }}
    - name: DD_TRACE_AGENT_URL
      value: {{ . }}
    {{- end }}
    {{- if not .Values.global.datadog.agent.admission }}
    - name: DATADOG_JAVA_AGENT
      value: "{{ .Values.global.datadog.enabled }}"
    - name: DD_SERVICE
      value: "{{ .Chart.Name }}"
    - name: DD_ENV
      value: {{ .Values.global.datadog.env | required "global.datadog.env is required." | quote }}
    - name: DD_VERSION
      value: "{{ .Values.image.tag }}"
    {{- end }}
    - name: DD_LOGS_INJECTION
      value: "{{ .Values.global.datadog.agent.logsInjection }}"
    - name: DD_PROFILING_ENABLED
      value: "{{ .Values.global.datadog.agent.profiling }}"
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED
      value: "{{ .Values.global.datadog.metrics.enabled }}"
    {{- if .Values.global.datadog.metrics.enabled }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_API_KEY
      value: {{ .Values.global.datadog.metrics.apiKey | required "global.datadog.metrics.apiKey is required." | quote }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_DESCRIPTIONS
      value: {{ .Values.global.datadog.metrics.descriptions | required "global.datadog.metrics.descriptions is required." | quote }}
    {{- with .Values.global.datadog.metrics.applicationKey }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_APPLICATION_KEY
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.uri }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_URI
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.hostTag }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_HOST_TAG
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.step }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_STEP
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.connectTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_CONNECT_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.readTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_READ_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.batchSize }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_BATCH_SIZE
      value: {{ . | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
  javaOpts:
    xms: 512m
    xmx: 1024m
    other: >-
      -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseZGC -XX:+ZGenerational -XX:MinHeapFreeRatio=5 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
  resources:
    limits:
      cpu: 2500m
      memory: 2000Mi
    requests:
      cpu: 1000m
      memory: 1150Mi
alfresco-modeling-app:
  enabled: true
  nameOverride: alfresco-modeling-app
  image:
    repository: quay.io/alfresco/alfresco-modeling-app
    tag: develop
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  service:
    name: modeling-app
    envType: frontend
  exampleProjects:
    disabled: false
  env:
    APP_CONFIG_AUTH_TYPE: OAUTH
    APP_CONFIG_ECM_HOST: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
    APP_CONFIG_DISABLED_EXAMPLE_PROJECTS: "{{ .Values.exampleProjects.disabled }}"
  ingress:
    path: /modeling
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: Authorization, Content-Type, Accept
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 256Mi
alfresco-deployment-service:
  nameOverride: alfresco-deployment-service
  enabled: true
  podAnnotations:
    admission.datadoghq.com/java-lib.version: '{{ include "alfresco-process-infrastructure.datadog.agent.javaLibVersion" . }}'
  podLabels:
    admission.datadoghq.com/enabled: '{{ include "alfresco-process-infrastructure.datadog.agent.admission" . }}'
    tags.datadoghq.com/service: "{{ .Chart.Name }}"
    tags.datadoghq.com/env: '{{ include "alfresco-process-infrastructure.datadog.env" . }}'
    tags.datadoghq.com/version: "{{ .Values.image.tag }}"
  rabbitmq:
    enabled: false
  image:
    repository: quay.io/alfresco/alfresco-deployment-service
    tag: 7.19.0-alpha.103
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  postgresql:
    enabled: true
  db:
    # use the namespace qualified postgres hostname for apps deployed in different namespaces
    uri: "jdbc:postgresql://{{ .Release.Name }}-{{ .Values.postgresql.name }}.{{ .Release.Namespace }}:{{ .Values.postgresql.port }}/postgres"
    username: alfresco
    password: alfresco
  applications:
    image:
      # alfresco-deployment-service.applications.image.tag -- default tag for all application images
      tag: develop
      # alfresco-deployment-service.applications.image.pullPolicy -- default pull policy for all application images
      pullPolicy: Always
      # alfresco-deployment-service.applications.image.pullSecretName -- pull secret name for all application images
      pullSecretName: quay-registry-secret
    # alfresco-deployment-service.applications.replicaCount -- default number of replicas for all applications
    replicaCount: 2
    podDisruptionBudget:
      # alfresco-deployment-service.applications.podDisruptionBudget.enabled -- set to true to enable PodDisruptionBudget for all applications
      enabled: true
      # alfresco-deployment-service.applications.podDisruptionBudget.minAvailable -- default min replicas to keep for all applications
      minAvailable: 1
    maxNumber: 20
    # alfresco-deployment-service.applications.maxNumber -- maximum number of application can be deployed
    # @default -- 20 applications can be deployed by default
    database:
      external: true
    connectors:
      # alfresco-deployment-service.applications.connectors.emailConnector -- In order to apply default account configuration to the email connector, all the variables need to be set. All email connectors in every application in the cluster will share the same account.
      emailConnector:
        # alfresco-deployment-service.applications.connectors.emailConnector.username -- email username
        username: ""
        # alfresco-deployment-service.applications.connectors.emailConnector.password -- email password
        password: ""
        # alfresco-deployment-service.applications.connectors.emailConnector.host -- email host
        host: ""
        # alfresco-deployment-service.applications.connectors.emailConnector.port -- email port
        port: ""
    processStorageService:
      # alfresco-deployment-service.applications.processStorageService.clientSecret -- client secret for process storage
      clientSecret: 08102f0f-025c-4226-8a3e-674343bff231
    activiti:
      keycloak:
        # alfresco-deployment-service.applications.activiti.keycloak.clientId -- activiti keycloak client id
        clientId: "{{ .Values.global.keycloak.clientId }}"
        # alfresco-deployment-service.applications.activiti.keycloak.clientSecret -- activiti keycloak client secret
        clientSecret: "{{ .Values.global.keycloak.clientSecret }}"
    analytics:
      metrics:
        export:
          enabled: true
          url: 'http://opensearch-cluster-master.{{ .Release.Namespace }}.svc.cluster.local:9200'
          username: admin
          password: admin
    rabbitmq:
      # alfresco-deployment-service.applications.rabbitmq.host -- RabbitMQ host
      host: "{{ .Release.Name }}-rabbitmq.{{ .Release.Namespace }}"
      # alfresco-deployment-service.applications.rabbitmq.port -- RabbitMQ port
      port: ""
      ssl:
        # alfresco-deployment-service.applications.rabbitmq.ssl.enabled -- RabbitMQ SSL enabled
        enabled: ""
      # alfresco-deployment-service.applications.rabbitmq.username -- RabbitMQ username
      username: "user"
      # alfresco-deployment-service.applications.rabbitmq.password -- RabbitMQ password
      password: "CHANGEME"
      admin:
        # alfresco-deployment-service.applications.rabbitmq.admin.url -- RabbitMQ admin URL, derived from host if not set
        url: ""
    # alfresco-deployment-service.applications.customRedirectUris -- custom URIs to allow for local development
    customRedirectUris: ""
    datadog:
      # alfresco-deployment-service.applications.datadog.enabled -- enables application Datadog observability conditional on global.datadog.enabled=true
      enabled: true
      # alfresco-deployment-service.applications.datadog.enabled -- enables application Datadog observability conditional on global.datadog.enabled=true
      env: "{{ .Values.global.datadog.env }}"
      agent:
        # alfresco-deployment-service.applications.datadog.agent.admission -- enables Datadog trace agent admission webhook for runtime applications.
        admission: true
        # alfresco-deployment-service.applications.datadog.agent.profiling -- enables Datadog trace agent profiling support for runtime applications.
        profiling: false
        # alfresco-deployment-service.applications.datadog.agent.logsInjection -- enables Datadog trace agent logs injection support for runtime applications.
        logsInjection: true
      metrics:
        # alfresco-deployment-service.applications.datadog.metrics.enabled -- enables application Datadog metrics observability.
        enabled: true
  ingress:
    path: /deployment-service
    enabled: true
    className: nginx
  readinessProbe:
    path: '{{ .Values.ingress.path }}/actuator/health/readiness'
  livenessProbe:
    path: '{{ .Values.ingress.path }}/actuator/health/liveness'
  environment:
    # alfresco-deployment-service.environment.apiUrl -- kubernetes API URL, $ kubectl config view -o jsonpath='{.clusters[0].cluster.server}'
    apiUrl: ""
    # alfresco-deployment-service.environment.apiToken -- kubernetes API Token
    # Create a service account alfresco-deployment-service and retrieve its token:
    # $ kubectl create serviceaccount -n kube-system alfresco-deployment-service
    # $ kubectl create clusterrolebinding alfresco-deployment-service-admin-binding --clusterrole cluster-admin --serviceaccount=kube-system:alfresco-deployment-service
    # $ kubectl -n kube-system get secret $(kubectl -n kube-system get serviceaccount alfresco-deployment-service -o jsonpath='{.secrets[0].name}') -o jsonpath='{.data.token}' | base64 --decode
    apiToken: ""
    # alfresco-deployment-service.environment.namespace -- namespace to copy secrets from to application namespaces
    # @default -- installation namespace
    namespace: "{{ .Release.Namespace }}"
  projectReleaseVolume:
    # alfresco-deployment-service.projectReleaseVolume.storageClass -- storage class for project release volume, set to null spring expression to use default
    storageClass: "#{null}"
    # alfresco-deployment-service.projectReleaseVolume.permission -- permission for project release volume
    permission: ReadWriteMany
  extraVolumes: |-
    - name: config
      configMap:
        name: {{ .Release.Name }}-deployment-config
        defaultMode: 0744
  extraEnv: |-
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_SERVLET_CONTEXTPATH
      value: "{{ .Values.ingress.path }}"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
      value: "*"
    - name: KEYCLOAK_AUTH_SERVER_URL
      value: '{{ include "common.keycloak-url" . }}'
    - name: DOCKER_REGISTRY_IMAGE_TAG
      value: "{{ .Values.applications.image.tag }}"
    - name: ALFRESCO_DOCKER_REGISTRY_SECRET_NAME
      value: "{{ .Values.applications.image.pullSecretName }}"
    - name: ALFRESCO_DOCKER_REGISTRY_IMAGEPULLPOLICY
      value: "{{ .Values.applications.image.pullPolicy }}"
    - name: CONTENT_SERVICE_BASE_URL
    {{- if .Values.global.hxpr.enabled}}
      value: "{{ .Values.global.hxpr.url }}"
    {{- else }}
      value: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    {{- end }}
    - name: CONTENT_SERVICE_ENABLED
      value: "{{ or .Values.global.acs.enabled .Values.global.hxpr.enabled }}"
    {{- with .Values.global.acs.activemq.url }}
    - name: CONTENT_SERVICE_ACTIVEMQ_URL
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.global.acs.activemq.username }}
    - name: CONTENT_SERVICE_ACTIVEMQ_USERNAME
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.global.acs.activemq.password }}
    - name: CONTENT_SERVICE_ACTIVEMQ_PASSWORD
      value: "{{ . }}"
    {{- end }}
    - name: MODELING_URL
      value: '{{ include "common.gateway-url" . }}/modeling-service'
    - name: ENVIRONMENT_HOST_URL
      value: '{{ include "common.gateway-url" . }}'
    - name: ENVIRONMENT_API_URL
      value: "{{ .Values.environment.apiUrl }}"
    - name: ENVIRONMENT_API_TOKEN
      value: "{{ .Values.environment.apiToken }}"
    - name: ENVIRONMENT_NAMESPACE
      value: "{{ tpl .Values.environment.namespace . }}"
    - name: ENVIRONMENT_DOMAIN
      value: '{{ include "common.gateway-domain" . }}'
    - name: PROJECT_RELEASE_VOLUME_STORAGE_CLASS
      value: "{{ .Values.projectReleaseVolume.storageClass }}"
    - name: PROJECT_RELEASE_VOLUME_PERMISSION
      value: "{{ .Values.projectReleaseVolume.permission }}"
    - name: APPLICATIONS_DATABASE_EXTERNAL
      value: "{{ .Values.applications.database.external }}"
    {{- with .Values.applications.connectors.emailConnector.username }}
    - name: CONNECTOR_EMAILCONNECTOR_USERNAME
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.connectors.emailConnector.password }}
    - name: CONNECTOR_EMAILCONNECTOR_PASSWORD
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.connectors.emailConnector.host }}
    - name: CONNECTOR_EMAILCONNECTOR_HOST
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.connectors.emailConnector.port }}
    - name: CONNECTOR_EMAILCONNECTOR_PORT
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.maxNumber }}
    - name: APPLICATIONS_MAXNUMBER
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.customRedirectUris }}
    - name: CUSTOM_REDIRECT_URIS
      value: "{{ . }}"
    {{- end }}
    - name: PROCESS_STORAGE_SERVICE_CLIENTSECRET
    {{- if .Values.global.hxpr.enabled}}
      value: "{{ .Values.global.hxpr.admin.clientSecret }}"
    {{- else }}
      value: "{{ tpl .Values.applications.processStorageService.clientSecret . }}"
    {{- end }}
    {{- with .Values.applications.activiti.keycloak.clientId }}
    - name: ACTIVITI_KEYCLOAK_CLIENT_ID
      value: "{{ tpl . $ }}"
    {{- end }}
    {{- with .Values.applications.activiti.keycloak.clientSecret }}
    - name: ACTIVITI_KEYCLOAK_CLIENT_SECRET
      value: "{{ tpl . $ }}"
    {{- end }}
    {{- if .Values.applications.rabbitmq.port }}
    - name: APPLICATIONS_RABBITMQ_PORT
      value: "{{ tpl .Values.applications.rabbitmq.port . }}"
    {{- end }}
    {{- if .Values.applications.rabbitmq.host }}
    - name: APPLICATIONS_RABBITMQ_HOST
      value: "{{ tpl .Values.applications.rabbitmq.host . }}"
    {{- end }}
    {{- if .Values.applications.rabbitmq.ssl.enabled }}
    - name: APPLICATIONS_RABBITMQ_SSL_ENABLED
      value: "{{ tpl .Values.applications.rabbitmq.ssl.enabled . }}"
    {{- end }}
    {{- with .Values.applications.rabbitmq.username }}
    - name: APPLICATIONS_RABBITMQ_USERNAME
      value: "{{ . }}"
    {{- end }}
    {{- with .Values.applications.rabbitmq.password }}
    - name: APPLICATIONS_RABBITMQ_PASSWORD
      value: "{{ . }}"
    {{- end }}
    {{- if .Values.applications.rabbitmq.admin.url }}
    - name: APPLICATIONS_RABBITMQ_ADMIN_URL
      value: "{{ tpl .Values.applications.rabbitmq.admin.url . }}"
    {{- end }}
    - name: APPLICATIONS_ANALYTICS_METRICS_EXPORT_ENABLED
      value: "{{ .Values.applications.analytics.metrics.export.enabled }}"
    {{- if .Values.applications.analytics.metrics.export.enabled }}
    - name: APPLICATIONS_ANALYTICS_METRICS_EXPORT_URL
      value: "{{ tpl .Values.applications.analytics.metrics.export.url $ }}"
    - name: APPLICATIONS_ANALYTICS_METRICS_EXPORT_USERNAME
      value: "{{ tpl .Values.applications.analytics.metrics.export.username $ }}"
    - name: APPLICATIONS_ANALYTICS_METRICS_EXPORT_PASSWORD
      value: "{{ tpl .Values.applications.analytics.metrics.export.password $ }}"
    {{- end }}
    - name: ATS_TRANSFORMER_TIKA_URL
      value: "http://tika.{{ .Release.Namespace }}/transform"
    - name: PROCESS_UI_URL
      value: '{{ include "common.gateway-url" . }}'
    - name: FORCE_UPDATE_RUNTIME_VERSION
      value: "true"
    {{- if .Values.global.hxpr.enabled }}
    - name: CONTENT_REPOSITORY_TYPE
      value: "hxp"
    - name: PROCESS_STORAGE_SERVICE_CLIENTID
      value: "{{ .Values.global.hxpr.admin.clientId }}"
    - name: HXPIDP_ACCOUNTID
      value: "{{ .Values.global.hxp.accountId }}"
    - name: HXP_CONTEXT_ENVIRONMENT
      value: "{{ .Values.global.hxp.context.environment }}"
    {{- end }}
    {{- if .Values.global.datadog.enabled }}
    {{- with .Values.global.datadog.agent.traceAgentUrl }}
    - name: DD_TRACE_AGENT_URL
      value: {{ . }}
    {{- end }}
    {{- if not .Values.global.datadog.agent.admission }}
    - name: DATADOG_JAVA_AGENT
      value: "{{ .Values.global.datadog.enabled }}"
    - name: DD_SERVICE
      value: "{{ .Chart.Name }}"
    - name: DD_ENV
      value: {{ .Values.global.datadog.env | required "global.datadog.env is required." | quote }}
    - name: DD_VERSION
      value: "{{ .Values.image.tag }}"
    {{- end }}
    - name: DD_LOGS_INJECTION
      value: "{{ .Values.global.datadog.agent.logsInjection }}"
    - name: DD_PROFILING_ENABLED
      value: "{{ .Values.global.datadog.agent.profiling }}"
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED
      value: "{{ .Values.global.datadog.metrics.enabled }}"
    {{- if .Values.global.datadog.metrics.enabled }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_API_KEY
      value: {{ .Values.global.datadog.metrics.apiKey | required "global.datadog.metrics.apiKey is required." | quote }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_DESCRIPTIONS
      value: {{ .Values.global.datadog.metrics.descriptions | required "global.datadog.metrics.descriptions is required." | quote }}
    {{- with .Values.global.datadog.metrics.applicationKey }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_APPLICATION_KEY
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.uri }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_URI
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.hostTag }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_HOST_TAG
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.step }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_STEP
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.connectTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_CONNECT_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.readTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_READ_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.batchSize }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_BATCH_SIZE
      value: {{ . | quote }}
    {{- end }}
    {{- end }}
    - name: APPLICATIONS_DATADOG_ENABLED
      value: "{{ .Values.applications.datadog.enabled }}"
    {{- if .Values.applications.datadog.enabled }}
    - name: APPLICATIONS_DATADOG_ADMISSION_ENABLED
      value: {{ .Values.applications.datadog.agent.admission | quote }}
    {{- if .Values.applications.datadog.agent.admission }}
    - name: APPLICATIONS_DATADOG_JAVA_LIB_VERSION
      value: {{ .Values.global.datadog.agent.javaLibVersion | required "global.datadog.agent.javaLibVersion is required." | quote }}
    {{- end }}
    - name: APPLICATIONS_DATADOG_ENV
      value: {{ tpl .Values.applications.datadog.env . | required "applications.datadog.env is required." | quote }}
    {{- with .Values.global.datadog.traceAgentUrl }}
    - name: APPLICATIONS_DATADOG_TRACE_AGENT_URL
      value: {{ . | quote }}
    {{- end }}
    - name: APPLICATIONS_DATADOG_METRICS_ENABLED
      value: "{{ .Values.applications.datadog.metrics.enabled }}"
    {{- if .Values.applications.datadog.metrics.enabled }}
    - name: APPLICATIONS_DATADOG_METRICS_API_KEY
      value: {{ .Values.global.datadog.metrics.apiKey | required "global.datadog.metrics.apiKey is required." | quote }}
    - name: APPLICATIONS_DATADOG_METRICS_DESCRIPTIONS
      value: {{ .Values.global.datadog.metrics.descriptions | required "global.datadog.metrics.descriptions is required." | quote }}
    {{- with .Values.global.datadog.metrics.applicationKey }}
    - name: APPLICATIONS_DATADOG_METRICS_APPLICATION_KEY
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.uri }}
    - name: APPLICATIONS_DATADOG_METRICS_URI
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.hostTag }}
    - name: APPLICATIONS_DATADOG_METRICS_HOST_TAG
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.step }}
    - name: APPLICATIONS_DATADOG_METRICS_STEP
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.connectTimeout }}
    - name: APPLICATIONS_DATADOG_METRICS_CONNECT_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.readTimeout }}
    - name: APPLICATIONS_DATADOG_METRICS_READ_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.batchSize }}
    - name: APPLICATIONS_DATADOG_METRICS_BATCH_SIZE
      value: {{ . | quote }}
    {{- end }}
    {{- end }}
    - name: APPLICATIONS_DATADOG_LOG_INJECTION_ENABLED
      value: "{{ .Values.applications.datadog.agent.logsInjection }}"
    - name: APPLICATIONS_DATADOG_PROFILING_ENABLED
      value: "{{ .Values.applications.datadog.agent.profiling }}"
    {{- end }}
    {{- end }}
  javaOpts:
    xms: 256m
    xmx: 512m
    other: >-
      -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseZGC -XX:+ZGenerational -XX:MinHeapFreeRatio=5 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
  resources:
    limits:
      cpu: 1000m
      memory: 2525Mi
    requests:
      cpu: 300m
      memory: 1175Mi
alfresco-admin-app:
  enabled: true
  nameOverride: alfresco-admin-app
  image:
    repository: quay.io/alfresco/alfresco-admin-app
    tag: develop
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  service:
    name: admin-app
    envType: frontend
  applications:
    allowCustomResources: true
  env:
    APP_CONFIG_BPM_HOST: '{{ include "common.gateway-url" . }}'
    APP_CONFIG_AUTH_TYPE: "OAUTH"
    APP_CONFIG_IDENTITY_HOST: '{{ include "common.keycloak-url" . }}/admin/realms/{{ include "common.keycloak-realm" . }}'
  extraEnv: |-
    - name: APP_ALLOW_CUSTOM_RESOURCES
      value: "{{ .Values.applications.allowCustomResources }}"
    {{- if .Values.global.acs.enabled }}
    - name: APP_CONFIG_ECM_HOST
      value: '{{ template "alfresco-process-infrastructure.acs-url" . }}'
    {{- else }}
    - name: APP_CONFIG_PROVIDER
      value: BPM
    {{- end }}
  ingress:
    path: /admin
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-headers: Authorization, Content-Type, Accept
  resources:
    limits:
      cpu: 500m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 256Mi
rabbitmq:
  enabled: true
  extraPlugins: ""
  auth:
    username: user
    password: CHANGEME
    erlangCookie: ylY79lOdNUWsJEwAGdVQnhjSazV4QZKO=
  resources:
    requests:
      memory: 1500Mi
    limits:
      memory: 1500Mi
setup-acs-script-job:
  enabled: true
  loadTestData: true
  image:
    repository: rockylinux/rockylinux
    tag: 9-minimal
alfresco-tika-service:
  nameOverride: alfresco-tika-service
  podAnnotations:
    admission.datadoghq.com/java-lib.version: '{{ include "alfresco-process-infrastructure.datadog.agent.javaLibVersion" . }}'
  podLabels:
    admission.datadoghq.com/enabled: '{{ include "alfresco-process-infrastructure.datadog.agent.admission" . }}'
    tags.datadoghq.com/service: "{{ .Chart.Name }}"
    tags.datadoghq.com/env: '{{ include "alfresco-process-infrastructure.datadog.env" . }}'
    tags.datadoghq.com/version: "{{ .Values.image.tag }}"
  enabled: true
  image:
    repository: quay.io/alfresco/alfresco-process-tika
    tag: 7.19.0-alpha.56
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  service:
    name: tika
    internalPort: 8090
  ingress:
    enabled: false
  readinessProbe:
    path: /ready
  livenessProbe:
    path: /live
  resources:
    requests:
      memory: 1000Mi
    limits:
      memory: 1000Mi
  javaOpts:
    other: >-
      -XX:MinRAMPercentage=50 -XX:MaxRAMPercentage=80
  extraEnv: |
    {{- if .Values.global.datadog.enabled }}
    {{- with .Values.global.datadog.agent.traceAgentUrl }}
    - name: DD_TRACE_AGENT_URL
      value: {{ . }}
    {{- end }}
    {{- if not .Values.global.datadog.agent.admission }}
    - name: DATADOG_JAVA_AGENT
      value: "{{ .Values.global.datadog.enabled }}"
    - name: DD_SERVICE
      value: "{{ .Chart.Name }}"
    - name: DD_ENV
      value: {{ .Values.global.datadog.env | required "global.datadog.env is required." | quote }}
    - name: DD_VERSION
      value: "{{ .Values.image.tag }}"
    {{- end }}
    - name: DD_LOGS_INJECTION
      value: "{{ .Values.global.datadog.agent.logsInjection }}"
    - name: DD_PROFILING_ENABLED
      value: "{{ .Values.global.datadog.agent.profiling }}"
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED
      value: "{{ .Values.global.datadog.metrics.enabled }}"
    {{- if .Values.global.datadog.metrics.enabled }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_API_KEY
      value: {{ .Values.global.datadog.metrics.apiKey | required "global.datadog.metrics.apiKey is required." | quote }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_DESCRIPTIONS
      value: {{ .Values.global.datadog.metrics.descriptions | required "global.datadog.metrics.descriptions is required." | quote }}
    {{- with .Values.global.datadog.metrics.applicationKey }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_APPLICATION_KEY
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.uri }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_URI
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.hostTag }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_HOST_TAG
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.step }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_STEP
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.connectTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_CONNECT_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.readTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_READ_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.batchSize }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_BATCH_SIZE
      value: {{ . | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
alfresco-process-analytics-service:
  enabled: true
  nameOverride: alfresco-process-analytics-service
  podAnnotations:
    admission.datadoghq.com/java-lib.version: '{{ include "alfresco-process-infrastructure.datadog.agent.javaLibVersion" . }}'
  podLabels:
    admission.datadoghq.com/enabled: '{{ include "alfresco-process-infrastructure.datadog.agent.admission" . }}'
    tags.datadoghq.com/service: "{{ .Chart.Name }}"
    tags.datadoghq.com/env: '{{ include "alfresco-process-infrastructure.datadog.env" . }}'
    tags.datadoghq.com/version: "{{ .Values.image.tag }}"
  metrics:
    client:
      url: 'http://opensearch-cluster-master.{{ .Release.Namespace }}.svc.cluster.local:9200'
      username: admin
      password: admin
  graphql:
    service:
      jwtIssuerUri: '{{ include "common.keycloak-url" . }}/realms/{{ include "common.keycloak-realm" . }}'
  image:
    repository: quay.io/alfresco/alfresco-process-analytics-graphql-service
    tag: 7.19.0-alpha.56
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  service:
    name: alfresco-process-analytics-service
    internalPort: 8080
  env:
    SPRING_WEBFLUX_BASE_PATH: '{{ tpl .Values.ingress.path $ | trimSuffix "/" }}'
    SPRING_ZIPKIN_ENABLED: "false"
    ALFRESCO_PROCESS_ANALYTICS_METRICS_CLIENT_URL: '{{ tpl .Values.metrics.client.url $ }}'
    ALFRESCO_PROCESS_ANALYTICS_METRICS_CLIENT_USERNAME: '{{ tpl .Values.metrics.client.username $ }}'
    ALFRESCO_PROCESS_ANALYTICS_METRICS_CLIENT_PASSWORD: '{{ tpl .Values.metrics.client.password $ }}'
    ALFRESCO_PROCESS_ANALYTICS_GRAPHQL_SERVICE_JWT_ISSUER_URI: '{{ tpl .Values.graphql.service.jwtIssuerUri $ }}'
  extraEnv: |
    {{- if .Values.global.datadog.enabled }}
    {{- with .Values.global.datadog.agent.traceAgentUrl }}
    - name: DD_TRACE_AGENT_URL
      value: {{ . }}
    {{- end }}
    {{- if not .Values.global.datadog.agent.admission }}
    - name: DATADOG_JAVA_AGENT
      value: "{{ .Values.global.datadog.enabled }}"
    - name: DD_SERVICE
      value: "{{ .Chart.Name }}"
    - name: DD_ENV
      value: {{ .Values.global.datadog.env | required "global.datadog.env is required." | quote }}
    - name: DD_VERSION
      value: "{{ .Values.image.tag }}"
    {{- end }}
    - name: DD_LOGS_INJECTION
      value: "{{ .Values.global.datadog.agent.logsInjection }}"
    - name: DD_PROFILING_ENABLED
      value: "{{ .Values.global.datadog.agent.profiling }}"
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED
      value: "{{ .Values.global.datadog.metrics.enabled }}"
    {{- if .Values.global.datadog.metrics.enabled }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_API_KEY
      value: {{ .Values.global.datadog.metrics.apiKey | required "global.datadog.metrics.apiKey is required." | quote }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_DESCRIPTIONS
      value: {{ .Values.global.datadog.metrics.descriptions | required "global.datadog.metrics.descriptions is required." | quote }}
    {{- with .Values.global.datadog.metrics.applicationKey }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_APPLICATION_KEY
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.uri }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_URI
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.hostTag }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_HOST_TAG
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.step }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_STEP
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.connectTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_CONNECT_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.readTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_READ_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.batchSize }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_BATCH_SIZE
      value: {{ . | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
  ingress:
    enabled: true
    path: /analytics
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/enable-cors: "true"
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 512Mi
  probePath: '{{ tpl .Values.ingress.path $ | trimSuffix "/" }}/actuator/health'
alfresco-process-analytics-playground:
  enabled: true
  nameOverride: alfresco-process-analytics-playground
  podAnnotations:
    admission.datadoghq.com/java-lib.version: '{{ include "alfresco-process-infrastructure.datadog.agent.javaLibVersion" . }}'
  podLabels:
    admission.datadoghq.com/enabled: '{{ include "alfresco-process-infrastructure.datadog.agent.admission" . }}'
    tags.datadoghq.com/service: "{{ .Chart.Name }}"
    tags.datadoghq.com/env: '{{ include "alfresco-process-infrastructure.datadog.env" . }}'
    tags.datadoghq.com/version: "{{ .Values.image.tag }}"
  graphql:
    client:
      oauth2ClientId: analytics-playground
      oauth2ClientSecret: 2181210d-ec04-4bcf-8649-8a5dcb1c6342
      jwtIssuerUri: '{{ include "common.keycloak-url" . }}/realms/{{ include "common.keycloak-realm" . }}'
      url: 'http://alfresco-process-analytics-service.{{ .Release.Namespace }}.svc.cluster.local/analytics/graphql'
  image:
    repository: quay.io/alfresco/alfresco-process-analytics-graphql-playground
    tag: 7.19.0-alpha.56
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  service:
    name: alfresco-process-analytics-playground
    internalPort: 5000
  env:
    SPRING_WEBFLUX_BASE_PATH: '{{ tpl .Values.ingress.path $ | trimSuffix "/" }}'
    SPRING_ZIPKIN_ENABLED: "false"
    ALFRESCO_PROCESS_ANALYTICS_GRAPHQL_CLIENT_URL: '{{ tpl .Values.graphql.client.url $ }}'
    ALFRESCO_PROCESS_ANALYTICS_GRAPHQL_CLIENT_JWT_ISSUER_URI: '{{ tpl .Values.graphql.client.jwtIssuerUri $ }}'
    ALFRESCO_PROCESS_ANALYTICS_GRAPHQL_CLIENT_OAUTH2_CLIENT_ID: '{{ tpl .Values.graphql.client.oauth2ClientId $ }}'
    ALFRESCO_PROCESS_ANALYTICS_GRAPHQL_CLIENT_OAUTH2_CLIENT_SECRET: '{{ tpl .Values.graphql.client.oauth2ClientSecret $ }}'
  extraEnv: |
    {{- if .Values.global.datadog.enabled }}
    {{- with .Values.global.datadog.agent.traceAgentUrl }}
    - name: DD_TRACE_AGENT_URL
      value: {{ . }}
    {{- end }}
    {{- if not .Values.global.datadog.agent.admission }}
    - name: DATADOG_JAVA_AGENT
      value: "{{ .Values.global.datadog.enabled }}"
    - name: DD_SERVICE
      value: "{{ .Chart.Name }}"
    - name: DD_ENV
      value: {{ .Values.global.datadog.env | required "global.datadog.env is required." | quote }}
    - name: DD_VERSION
      value: "{{ .Values.image.tag }}"
    {{- end }}
    - name: DD_LOGS_INJECTION
      value: "{{ .Values.global.datadog.agent.logsInjection }}"
    - name: DD_PROFILING_ENABLED
      value: "{{ .Values.global.datadog.agent.profiling }}"
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED
      value: "{{ .Values.global.datadog.metrics.enabled }}"
    {{- if .Values.global.datadog.metrics.enabled }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_API_KEY
      value: {{ .Values.global.datadog.metrics.apiKey | required "global.datadog.metrics.apiKey is required." | quote }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_DESCRIPTIONS
      value: {{ .Values.global.datadog.metrics.descriptions | required "global.datadog.metrics.descriptions is required." | quote }}
    {{- with .Values.global.datadog.metrics.applicationKey }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_APPLICATION_KEY
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.uri }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_URI
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.hostTag }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_HOST_TAG
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.step }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_STEP
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.connectTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_CONNECT_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.readTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_READ_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.batchSize }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_BATCH_SIZE
      value: {{ . | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
  ingress:
    enabled: true
    path: /analytics/playground/
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/enable-cors: "true"
  resources:
    limits:
      cpu: 1000m
      memory: 1024Mi
    requests:
      cpu: 200m
      memory: 512Mi
  probePath: '{{ tpl .Values.ingress.path $ | trimSuffix "/" }}/actuator/health'
opensearch:
  enabled: true
  replicas: 2
  extraEnvs:
    - name: DISABLE_INSTALL_DEMO_CONFIG
      value: "true"
    - name: DISABLE_SECURITY_PLUGIN
      value: "true"
alfresco-identity-adapter-service:
  enabled: true
  nameOverride: alfresco-identity-adapter-service
  podAnnotations:
    admission.datadoghq.com/java-lib.version: '{{ include "alfresco-process-infrastructure.datadog.agent.javaLibVersion" . }}'
  podLabels:
    admission.datadoghq.com/enabled: '{{ include "alfresco-process-infrastructure.datadog.agent.admission" . }}'
    tags.datadoghq.com/service: "{{ .Chart.Name }}"
    tags.datadoghq.com/env: '{{ include "alfresco-process-infrastructure.datadog.env" . }}'
    tags.datadoghq.com/version: "{{ .Values.image.tag }}"
  ingress:
    enabled: true
    className: nginx
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /$1
    path: "/identity-adapter-service/?(.*)"
    pathType: ImplementationSpecific
  image:
    repository: quay.io/alfresco/alfresco-identity-adapter-service
    tag: 7.19.0-alpha.71
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  liquibase:
    enabled: false
  postgresql:
    enabled: false
  probePath: /actuator/health
  rabbitmq:
    enabled: false
  activiti:
    keycloak:
      # alfresco-modeling-service.applications.activiti.keycloak.clientId -- activiti keycloak client id
      clientId: "{{ .Values.global.keycloak.clientId }}"
      # alfresco-modeling-service.applications.activiti.keycloak.clientSecret -- activiti keycloak client secret
      clientSecret: "{{ .Values.global.keycloak.clientSecret }}"
  extraEnv: |-
    - name: SERVER_PORT
      value: "8080"
    - name: SERVER_USEFORWARDHEADERS
      value: "true"
    - name: SERVER_TOMCAT_INTERNALPROXIES
      value: ".*"
    - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
      value: "*"
    {{- with .Values.activiti.keycloak.clientId }}
    - name: ACTIVITI_KEYCLOAK_CLIENT_ID
      value: "{{ tpl . $ }}"
    {{- end }}
    {{- with .Values.activiti.keycloak.clientSecret }}
    - name: ACTIVITI_KEYCLOAK_CLIENT_SECRET
      value: "{{ tpl . $ }}"
    {{- end }}
    {{- if .Values.global.datadog.enabled }}
    {{- with .Values.global.datadog.agent.traceAgentUrl }}
    - name: DD_TRACE_AGENT_URL
      value: {{ . }}
    {{- end }}
    {{- if not .Values.global.datadog.agent.admission }}
    - name: DATADOG_JAVA_AGENT
      value: "{{ .Values.global.datadog.enabled }}"
    - name: DD_SERVICE
      value: "{{ .Chart.Name }}"
    - name: DD_ENV
      value: {{ .Values.global.datadog.env | required "global.datadog.env is required." | quote }}
    - name: DD_VERSION
      value: "{{ .Values.image.tag }}"
    {{- end }}
    - name: DD_LOGS_INJECTION
      value: "{{ .Values.global.datadog.agent.logsInjection }}"
    - name: DD_PROFILING_ENABLED
      value: "{{ .Values.global.datadog.agent.profiling }}"
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_ENABLED
      value: "{{ .Values.global.datadog.metrics.enabled }}"
    {{- if .Values.global.datadog.metrics.enabled }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_API_KEY
      value: {{ .Values.global.datadog.metrics.apiKey | required "global.datadog.metrics.apiKey is required." | quote }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_DESCRIPTIONS
      value: {{ .Values.global.datadog.metrics.descriptions | required "global.datadog.metrics.descriptions is required." | quote }}
    {{- with .Values.global.datadog.metrics.applicationKey }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_APPLICATION_KEY
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.uri }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_URI
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.hostTag }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_HOST_TAG
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.step }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_STEP
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.connectTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_CONNECT_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.readTimeout }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_READ_TIMEOUT
      value: {{ . | quote }}
    {{- end }}
    {{- with .Values.global.datadog.metrics.batchSize }}
    - name: MANAGEMENT_DATADOG_METRICS_EXPORT_BATCH_SIZE
      value: {{ . | quote }}
    {{- end }}
    {{- end }}
    {{- end }}
  javaOpts:
    xms: 512m
    xmx: 3072m
    other: >-
      -XX:+UnlockExperimentalVMOptions -Dsun.zip.disableMemoryMapping=true -XX:+UseZGC -XX:+ZGenerational -XX:MinHeapFreeRatio=5 -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90
  resources:
    requests:
      memory: 905Mi
      cpu: 150m
    limits:
      cpu: 750m
      memory: 3000Mi
alfresco-static-resources:
  nameOverride: alfresco-static-resources
  podAnnotations:
  enabled: true
  image:
    repository: quay.io/alfresco/apa-static-resources
    tag: 7.18.0-beta.62
    pullPolicy: Always
  replicaCount: 2
  podDisruptionBudget:
    enabled: true
    minAvailable: 1
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 10
          podAffinityTerm:
            labelSelector:
              matchLabels:
                app.kubernetes.io/name: '{{ template "common.name" . }}'
                app.kubernetes.io/instance: '{{ .Release.Name }}'
            topologyKey: failure-domain.beta.kubernetes.io/zone
  service:
    name: static-resources
    internalPort: 8080
  ingress:
    enabled: false
  readinessProbe:
    path: /
    port: 8080
  livenessProbe:
    path: /
    port: 8080
  resources:
    requests:
      memory: 128Mi
      cpu: 200m
    limits:
      cpu: 500m
      memory: 128Mi
